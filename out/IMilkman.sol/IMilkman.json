{"abi":[{"type":"function","name":"cancelSwap","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"fromToken","type":"address","internalType":"contract IERC20"},{"name":"toToken","type":"address","internalType":"contract IERC20"},{"name":"to","type":"address","internalType":"address"},{"name":"priceChecker","type":"address","internalType":"address"},{"name":"priceCheckerData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestSwapExactTokensForTokens","inputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"fromToken","type":"address","internalType":"contract IERC20"},{"name":"toToken","type":"address","internalType":"contract IERC20"},{"name":"to","type":"address","internalType":"address"},{"name":"priceChecker","type":"address","internalType":"address"},{"name":"priceCheckerData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cancelSwap(uint256,address,address,address,address,bytes)":"a47721e3","requestSwapExactTokensForTokens(uint256,address,address,address,address,bytes)":"de9f0916"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceChecker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"priceCheckerData\",\"type\":\"bytes\"}],\"name\":\"cancelSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceChecker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"priceCheckerData\",\"type\":\"bytes\"}],\"name\":\"requestSwapExactTokensForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelSwap(uint256,address,address,address,address,bytes)\":{\"details\":\"`msg.sender` must be the original order creator. The other parameters are required to verify that this is the case (kind of like a merkle proof).\"},\"requestSwapExactTokensForTokens(uint256,address,address,address,address,bytes)\":{\"details\":\"Swaps are usually completed in ~2 minutes.\",\"params\":{\"amountIn\":\"The number of tokens to sell.\",\"fromToken\":\"The token that the user wishes to sell.\",\"priceChecker\":\"A contract that verifies an order (mainly its minOut and fee) before Milkman signs it.\",\"priceCheckerData\":\"Data that gets passed to the price checker.\",\"to\":\"Who should receive the tokens.\",\"toToken\":\"The token that the user wishes to receive.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelSwap(uint256,address,address,address,address,bytes)\":{\"notice\":\"Cancel a requested swap, sending the tokens back to the order creator.\"},\"requestSwapExactTokensForTokens(uint256,address,address,address,address,bytes)\":{\"notice\":\"Asynchronously swap an exact amount of tokenIn for a market-determined amount of tokenOut.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/aave-helpers/src/swaps/interfaces/IMilkman.sol\":\"IMilkman\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/core-v3/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-core/\",\":@aave/periphery-v3/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-periphery/\",\":aave-address-book/=lib/aave-helpers/lib/aave-address-book/src/\",\":aave-helpers/=lib/aave-helpers/src/\",\":aave-v3-core/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-core/\",\":aave-v3-periphery/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-periphery/\",\":ds-test/=lib/aave-helpers/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/aave-helpers/lib/forge-std/src/\",\":governance-crosschain-bridges/=lib/aave-helpers/lib/governance-crosschain-bridges/\",\":solidity-utils/=lib/aave-helpers/lib/solidity-utils/src/\"]},\"sources\":{\"lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20.sol\":{\"keccak256\":\"0x510a088112e38933c8eff10816a3f74a0ea2365dc0914384b9097cdb62d8db69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3f702a4bfbec4bb8604174d80de82d5960b8997cd5b832c6f9a1850593e4bd4\",\"dweb:/ipfs/QmfXs5ejLkLQKYAg2RSm2woaAhZya6oVPeDs7T5yrAWBhT\"]},\"lib/aave-helpers/src/swaps/interfaces/IMilkman.sol\":{\"keccak256\":\"0x2a22ac818fb9f566943e3a8fb3d6a9a0da48871e0c8f7668aa0ec043b61be537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be18452150b9511ca377c43e962077f8e889649fed0ef25dc928d98dc61ddc60\",\"dweb:/ipfs/QmVMMA5gfzv2HNn2ZLxyJfGd7VvzQK459axQYQjYV6bPc5\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"address","name":"priceChecker","type":"address"},{"internalType":"bytes","name":"priceCheckerData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"cancelSwap"},{"inputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"contract IERC20","name":"fromToken","type":"address"},{"internalType":"contract IERC20","name":"toToken","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"address","name":"priceChecker","type":"address"},{"internalType":"bytes","name":"priceCheckerData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"requestSwapExactTokensForTokens"}],"devdoc":{"kind":"dev","methods":{"cancelSwap(uint256,address,address,address,address,bytes)":{"details":"`msg.sender` must be the original order creator. The other parameters are required to verify that this is the case (kind of like a merkle proof)."},"requestSwapExactTokensForTokens(uint256,address,address,address,address,bytes)":{"details":"Swaps are usually completed in ~2 minutes.","params":{"amountIn":"The number of tokens to sell.","fromToken":"The token that the user wishes to sell.","priceChecker":"A contract that verifies an order (mainly its minOut and fee) before Milkman signs it.","priceCheckerData":"Data that gets passed to the price checker.","to":"Who should receive the tokens.","toToken":"The token that the user wishes to receive."}}},"version":1},"userdoc":{"kind":"user","methods":{"cancelSwap(uint256,address,address,address,address,bytes)":{"notice":"Cancel a requested swap, sending the tokens back to the order creator."},"requestSwapExactTokensForTokens(uint256,address,address,address,address,bytes)":{"notice":"Asynchronously swap an exact amount of tokenIn for a market-determined amount of tokenOut."}},"version":1}},"settings":{"remappings":["@aave/core-v3/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-core/","@aave/periphery-v3/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-periphery/","aave-address-book/=lib/aave-helpers/lib/aave-address-book/src/","aave-helpers/=lib/aave-helpers/src/","aave-v3-core/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-core/","aave-v3-periphery/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-periphery/","ds-test/=lib/aave-helpers/lib/forge-std/lib/ds-test/src/","forge-std/=lib/aave-helpers/lib/forge-std/src/","governance-crosschain-bridges/=lib/aave-helpers/lib/governance-crosschain-bridges/","solidity-utils/=lib/aave-helpers/lib/solidity-utils/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/aave-helpers/src/swaps/interfaces/IMilkman.sol":"IMilkman"},"evmVersion":"paris","libraries":{}},"sources":{"lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20.sol":{"keccak256":"0x510a088112e38933c8eff10816a3f74a0ea2365dc0914384b9097cdb62d8db69","urls":["bzz-raw://a3f702a4bfbec4bb8604174d80de82d5960b8997cd5b832c6f9a1850593e4bd4","dweb:/ipfs/QmfXs5ejLkLQKYAg2RSm2woaAhZya6oVPeDs7T5yrAWBhT"],"license":"MIT"},"lib/aave-helpers/src/swaps/interfaces/IMilkman.sol":{"keccak256":"0x2a22ac818fb9f566943e3a8fb3d6a9a0da48871e0c8f7668aa0ec043b61be537","urls":["bzz-raw://be18452150b9511ca377c43e962077f8e889649fed0ef25dc928d98dc61ddc60","dweb:/ipfs/QmVMMA5gfzv2HNn2ZLxyJfGd7VvzQK459axQYQjYV6bPc5"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/aave-helpers/src/swaps/interfaces/IMilkman.sol","id":79061,"exportedSymbols":{"IERC20":[63440],"IMilkman":[79060]},"nodeType":"SourceUnit","src":"32:1324:129","nodes":[{"id":79021,"nodeType":"PragmaDirective","src":"32:23:129","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":79023,"nodeType":"ImportDirective","src":"57:80:129","nodes":[],"absolutePath":"lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20.sol","file":"solidity-utils/contracts/oz-common/interfaces/IERC20.sol","nameLocation":"-1:-1:-1","scope":79061,"sourceUnit":63441,"symbolAliases":[{"foreign":{"id":79022,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63440,"src":"65:6:129","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":79060,"nodeType":"ContractDefinition","src":"139:1216:129","nodes":[{"id":79041,"nodeType":"FunctionDefinition","src":"734:197:129","nodes":[],"documentation":{"id":79024,"nodeType":"StructuredDocumentation","src":"162:569:129","text":"@notice Asynchronously swap an exact amount of tokenIn for a market-determined amount of tokenOut.\n @dev Swaps are usually completed in ~2 minutes.\n @param amountIn The number of tokens to sell.\n @param fromToken The token that the user wishes to sell.\n @param toToken The token that the user wishes to receive.\n @param to Who should receive the tokens.\n @param priceChecker A contract that verifies an order (mainly its minOut and fee) before Milkman signs it.\n @param priceCheckerData Data that gets passed to the price checker."},"functionSelector":"de9f0916","implemented":false,"kind":"function","modifiers":[],"name":"requestSwapExactTokensForTokens","nameLocation":"743:31:129","parameters":{"id":79039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79026,"mutability":"mutable","name":"amountIn","nameLocation":"788:8:129","nodeType":"VariableDeclaration","scope":79041,"src":"780:16:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79025,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:129","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":79029,"mutability":"mutable","name":"fromToken","nameLocation":"809:9:129","nodeType":"VariableDeclaration","scope":79041,"src":"802:16:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$63440","typeString":"contract IERC20"},"typeName":{"id":79028,"nodeType":"UserDefinedTypeName","pathNode":{"id":79027,"name":"IERC20","nameLocations":["802:6:129"],"nodeType":"IdentifierPath","referencedDeclaration":63440,"src":"802:6:129"},"referencedDeclaration":63440,"src":"802:6:129","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$63440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":79032,"mutability":"mutable","name":"toToken","nameLocation":"831:7:129","nodeType":"VariableDeclaration","scope":79041,"src":"824:14:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$63440","typeString":"contract IERC20"},"typeName":{"id":79031,"nodeType":"UserDefinedTypeName","pathNode":{"id":79030,"name":"IERC20","nameLocations":["824:6:129"],"nodeType":"IdentifierPath","referencedDeclaration":63440,"src":"824:6:129"},"referencedDeclaration":63440,"src":"824:6:129","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$63440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":79034,"mutability":"mutable","name":"to","nameLocation":"852:2:129","nodeType":"VariableDeclaration","scope":79041,"src":"844:10:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79033,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:129","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79036,"mutability":"mutable","name":"priceChecker","nameLocation":"868:12:129","nodeType":"VariableDeclaration","scope":79041,"src":"860:20:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79035,"name":"address","nodeType":"ElementaryTypeName","src":"860:7:129","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79038,"mutability":"mutable","name":"priceCheckerData","nameLocation":"901:16:129","nodeType":"VariableDeclaration","scope":79041,"src":"886:31:129","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":79037,"name":"bytes","nodeType":"ElementaryTypeName","src":"886:5:129","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"774:147:129"},"returnParameters":{"id":79040,"nodeType":"ParameterList","parameters":[],"src":"930:0:129"},"scope":79060,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":79059,"nodeType":"FunctionDefinition","src":"1177:176:129","nodes":[],"documentation":{"id":79042,"nodeType":"StructuredDocumentation","src":"935:239:129","text":"@notice Cancel a requested swap, sending the tokens back to the order creator.\n @dev `msg.sender` must be the original order creator. The other parameters are required to verify that this is the case (kind of like a merkle proof)."},"functionSelector":"a47721e3","implemented":false,"kind":"function","modifiers":[],"name":"cancelSwap","nameLocation":"1186:10:129","parameters":{"id":79057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79044,"mutability":"mutable","name":"amountIn","nameLocation":"1210:8:129","nodeType":"VariableDeclaration","scope":79059,"src":"1202:16:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1202:7:129","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":79047,"mutability":"mutable","name":"fromToken","nameLocation":"1231:9:129","nodeType":"VariableDeclaration","scope":79059,"src":"1224:16:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$63440","typeString":"contract IERC20"},"typeName":{"id":79046,"nodeType":"UserDefinedTypeName","pathNode":{"id":79045,"name":"IERC20","nameLocations":["1224:6:129"],"nodeType":"IdentifierPath","referencedDeclaration":63440,"src":"1224:6:129"},"referencedDeclaration":63440,"src":"1224:6:129","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$63440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":79050,"mutability":"mutable","name":"toToken","nameLocation":"1253:7:129","nodeType":"VariableDeclaration","scope":79059,"src":"1246:14:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$63440","typeString":"contract IERC20"},"typeName":{"id":79049,"nodeType":"UserDefinedTypeName","pathNode":{"id":79048,"name":"IERC20","nameLocations":["1246:6:129"],"nodeType":"IdentifierPath","referencedDeclaration":63440,"src":"1246:6:129"},"referencedDeclaration":63440,"src":"1246:6:129","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$63440","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":79052,"mutability":"mutable","name":"to","nameLocation":"1274:2:129","nodeType":"VariableDeclaration","scope":79059,"src":"1266:10:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79051,"name":"address","nodeType":"ElementaryTypeName","src":"1266:7:129","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79054,"mutability":"mutable","name":"priceChecker","nameLocation":"1290:12:129","nodeType":"VariableDeclaration","scope":79059,"src":"1282:20:129","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79053,"name":"address","nodeType":"ElementaryTypeName","src":"1282:7:129","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79056,"mutability":"mutable","name":"priceCheckerData","nameLocation":"1323:16:129","nodeType":"VariableDeclaration","scope":79059,"src":"1308:31:129","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":79055,"name":"bytes","nodeType":"ElementaryTypeName","src":"1308:5:129","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1196:147:129"},"returnParameters":{"id":79058,"nodeType":"ParameterList","parameters":[],"src":"1352:0:129"},"scope":79060,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IMilkman","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[79060],"name":"IMilkman","nameLocation":"149:8:129","scope":79061,"usedErrors":[]}],"license":"MIT"},"id":129}