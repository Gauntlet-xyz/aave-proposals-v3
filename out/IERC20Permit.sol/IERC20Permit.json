{"abi":[{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"nonces","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"permit","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/core-v3/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-core/\",\":@aave/periphery-v3/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-periphery/\",\":aave-address-book/=lib/aave-helpers/lib/aave-address-book/src/\",\":aave-helpers/=lib/aave-helpers/src/\",\":aave-v3-core/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-core/\",\":aave-v3-periphery/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-periphery/\",\":ds-test/=lib/aave-helpers/lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/aave-helpers/lib/forge-std/src/\",\":governance-crosschain-bridges/=lib/aave-helpers/lib/governance-crosschain-bridges/\",\":solidity-utils/=lib/aave-helpers/lib/solidity-utils/src/\"]},\"sources\":{\"lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xf455056affbe27997d7cdfbb7ee3b8e7cdef3c2f6b71d97cc204cb1621440193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce1d2a17f6d32246ec54ebf5e1fcfd72d48d606bb4c192a4e1051d08de2b20c\",\"dweb:/ipfs/QmZSPGWfJAzBudcsLQaMXwhQvg3X2Jya5NvxkSGy7ViCFa\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"permit"}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@aave/core-v3/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-core/","@aave/periphery-v3/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-periphery/","aave-address-book/=lib/aave-helpers/lib/aave-address-book/src/","aave-helpers/=lib/aave-helpers/src/","aave-v3-core/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-core/","aave-v3-periphery/=lib/aave-helpers/lib/aave-address-book/lib/aave-v3-periphery/","ds-test/=lib/aave-helpers/lib/forge-std/lib/ds-test/src/","forge-std/=lib/aave-helpers/lib/forge-std/src/","governance-crosschain-bridges/=lib/aave-helpers/lib/governance-crosschain-bridges/","solidity-utils/=lib/aave-helpers/lib/solidity-utils/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20Permit.sol":"IERC20Permit"},"evmVersion":"paris","libraries":{}},"sources":{"lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20Permit.sol":{"keccak256":"0xf455056affbe27997d7cdfbb7ee3b8e7cdef3c2f6b71d97cc204cb1621440193","urls":["bzz-raw://0ce1d2a17f6d32246ec54ebf5e1fcfd72d48d606bb4c192a4e1051d08de2b20c","dweb:/ipfs/QmZSPGWfJAzBudcsLQaMXwhQvg3X2Jya5NvxkSGy7ViCFa"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/aave-helpers/lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20Permit.sol","id":63502,"exportedSymbols":{"IERC20Permit":[63501]},"nodeType":"SourceUnit","src":"242:2088:110","nodes":[{"id":63467,"nodeType":"PragmaDirective","src":"242:23:110","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":63501,"nodeType":"ContractDefinition","src":"748:1581:110","nodes":[{"id":63486,"nodeType":"FunctionDefinition","src":"1568:153:110","nodes":[],"documentation":{"id":63469,"nodeType":"StructuredDocumentation","src":"775:790:110","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1577:6:110","parameters":{"id":63484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63471,"mutability":"mutable","name":"owner","nameLocation":"1597:5:110","nodeType":"VariableDeclaration","scope":63486,"src":"1589:13:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63470,"name":"address","nodeType":"ElementaryTypeName","src":"1589:7:110","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63473,"mutability":"mutable","name":"spender","nameLocation":"1616:7:110","nodeType":"VariableDeclaration","scope":63486,"src":"1608:15:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63472,"name":"address","nodeType":"ElementaryTypeName","src":"1608:7:110","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63475,"mutability":"mutable","name":"value","nameLocation":"1637:5:110","nodeType":"VariableDeclaration","scope":63486,"src":"1629:13:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1629:7:110","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63477,"mutability":"mutable","name":"deadline","nameLocation":"1656:8:110","nodeType":"VariableDeclaration","scope":63486,"src":"1648:16:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:110","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":63479,"mutability":"mutable","name":"v","nameLocation":"1676:1:110","nodeType":"VariableDeclaration","scope":63486,"src":"1670:7:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":63478,"name":"uint8","nodeType":"ElementaryTypeName","src":"1670:5:110","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":63481,"mutability":"mutable","name":"r","nameLocation":"1691:1:110","nodeType":"VariableDeclaration","scope":63486,"src":"1683:9:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":63480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1683:7:110","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":63483,"mutability":"mutable","name":"s","nameLocation":"1706:1:110","nodeType":"VariableDeclaration","scope":63486,"src":"1698:9:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":63482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1698:7:110","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1583:128:110"},"returnParameters":{"id":63485,"nodeType":"ParameterList","parameters":[],"src":"1720:0:110"},"scope":63501,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":63494,"nodeType":"FunctionDefinition","src":"2020:63:110","nodes":[],"documentation":{"id":63487,"nodeType":"StructuredDocumentation","src":"1725:292:110","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2029:6:110","parameters":{"id":63490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63489,"mutability":"mutable","name":"owner","nameLocation":"2044:5:110","nodeType":"VariableDeclaration","scope":63494,"src":"2036:13:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63488,"name":"address","nodeType":"ElementaryTypeName","src":"2036:7:110","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2035:15:110"},"returnParameters":{"id":63493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63494,"src":"2074:7:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63491,"name":"uint256","nodeType":"ElementaryTypeName","src":"2074:7:110","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2073:9:110"},"scope":63501,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":63500,"nodeType":"FunctionDefinition","src":"2267:60:110","nodes":[],"documentation":{"id":63495,"nodeType":"StructuredDocumentation","src":"2087:126:110","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2276:16:110","parameters":{"id":63496,"nodeType":"ParameterList","parameters":[],"src":"2292:2:110"},"returnParameters":{"id":63499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63500,"src":"2318:7:110","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":63497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2318:7:110","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2317:9:110"},"scope":63501,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":63468,"nodeType":"StructuredDocumentation","src":"267:480:110","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"linearizedBaseContracts":[63501],"name":"IERC20Permit","nameLocation":"758:12:110","scope":63502,"usedErrors":[]}],"license":"MIT"},"id":110}